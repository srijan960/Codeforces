package Practice;



           import java.awt.Point;
           import java.io.InputStreamReader;
            import java.io.BufferedReader;
            import java.io.IOException; 
            import java.lang.reflect.Array;
            import java.util.ArrayList;
            import java.util.Arrays;
            import java.util.Collections;
            import java.util.HashMap;
            import java.util.HashSet;
            import java.util.Iterator;
            import java.util.List;
            import java.util.Map;
            import java.util.Optional;
            import java.util.Set;
            import java.util.TreeMap;
 
 
 
              public class Codeforces {
 
                  public static void main(String[] args) throws IOException {
                  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                  int n = Integer.parseInt(br.readLine());
                  String[] s = br.readLine().trim().split(" ");
                  int[] arr = new int[n];
                  for(int i = 0; i < n; i++){
                      arr[i] = Integer.parseInt(s[i]);
                  }
                  long moves = 0;
                  ArrayList<Integer> list = new ArrayList<>();
                  int NumberToMake = 0;
                  int i = 0;
                  for(i = 1; i < n ; i++){
                      if(arr[i] < arr[i - 1]){
                          list.add(arr[i]);
                          NumberToMake = arr[i - 1];
                          i++;
                          while(i < n  && arr[i] < arr[i - 1]){
                              list.add(arr[i]);
                              i++;
                          }
                          Collections.sort(list);
                          int num = list.get(0);
                          moves += NumberToMake - num;
                          list.clear();
                      }
                  }
                  
                  System.out.println(moves);
                  
                  
                   }
                  }
              
                 
                    
                 
                  
                  
