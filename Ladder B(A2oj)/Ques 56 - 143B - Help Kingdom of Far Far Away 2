 import java.awt.Point;
           import java.io.InputStreamReader;
            import java.io.BufferedReader;
            import java.io.IOException; 
            import java.lang.reflect.Array;
            import java.util.ArrayList;
            import java.util.Arrays;
            import java.util.Collections;
            import java.util.HashMap;
            import java.util.HashSet;
            import java.util.Iterator;
            import java.util.List;
            import java.util.Map;
            import java.util.Optional;
            import java.util.Set;
            import java.util.TreeMap;
 
 
 
              public class Codeforces {
 
                  public static void main(String[] args) throws IOException {
                  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                  String s = br.readLine();
                 
                  
                  int DecimalIndex = s.length() - 1;
                  boolean DecimalPresent = false;
                  for(int i = 0; i < s.length(); i++){
                      if(s.charAt(i) =='.'){
                          DecimalIndex = i;
                          DecimalPresent = true;
                          break;
                      }
                  }
                  StringBuilder NewNumber = new StringBuilder();
                  if(DecimalIndex != s.length() - 1){
                      DecimalIndex -= 1;
                  }
                      int count = 0;
                      char Ins = ',';
                      for(int i = DecimalIndex ; i >= 0; i--){
                          count++;
                          NewNumber.append(s.charAt(i));
                          if(count == 3 && i != 0 ){
                              if(i - 1 >=0 && s.charAt(i - 1) != '-'){
                              NewNumber.append(Ins);
                              count = 0;}
                          }
                      }
                      NewNumber.reverse();
                      
                     
                      
                      
                         NewNumber.append('.');
                          count = 0;
                      for(int i = DecimalIndex + 1; i < s.length() ;i ++ ){
                         if(s.charAt(i) != '.') {NewNumber.append(s.charAt(i));
                          count++;
                         }
                          if(count == 2) break;
                      }
                      
                      if(count != 2){
                          if(count == 0) {
                              NewNumber.append('0');
                               NewNumber.append('0');
                          }
                          else if(count == 1){
                               NewNumber.append('0');;
                          }}
                      String num = NewNumber.toString();
                      
                      
                      
                      StringBuilder ans = new StringBuilder();
                      if(s.charAt(0) == '-'){
                          ans.append('(');
                          ans.append('$');
                          ans.append(num.substring(1, num.length()));
                          ans.append(')');
                      }
                      else{
                          ans.append('$');
                          ans.append(num);
                      }
                      
                  System.out.println(ans.toString());
                  
                 
                  }
                  }
                 
                    
                 
                  
                  
