import java.awt.Point;
           import java.io.InputStreamReader;
            import java.io.BufferedReader;
            import java.io.IOException; 
            import java.lang.reflect.Array;
            import java.util.ArrayList;
            import java.util.Arrays;
            import java.util.Collections;
            import java.util.HashMap;
            import java.util.HashSet;
            import java.util.Iterator;
            import java.util.List;
            import java.util.Map;
            import java.util.Optional;
            import java.util.Set;
            import java.util.TreeMap;
 
 
 
              public class Codeforces {
 
                  public static void main(String[] args) throws IOException {
                  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                  String[] nm = br.readLine().trim().split(" ");
                  int n = Integer.parseInt(nm[0]);
                  int m = Integer.parseInt(nm[1]);
                  int[][] arr = new int[m][3];
                  for(int i = 0; i < m; i++){
                      String[] s = br.readLine().trim().split(" ");
                      for(int j = 0; j < 3;j ++){
                          arr[i][j] = Integer.parseInt(s[j]);
                      }
                  }
                  int[] res = new int[n + 2];
                  //System.out.println(res.length+"ss");
                  for(int i = 0 ; i < m; i++){
                     int a = arr[i][0];
                     int b = arr[i][1];
                     int c = arr[i][2];
                     
                     if(res[a] == 0 && res[b] == 0 && res[c] == 0){
                         res[a] = 1;
                         res[b] = 2;
                         res[c] =3;
                     }
                     else{
                         Set<Integer> set = new HashSet<>();
                        set.add(1);
                        set.add(2);
                        set.add(3);
                        
                        if(res[a]!=0) set.remove(res[a]);
                        if(res[b]!=0) set.remove(res[b]);
                        if(res[c]!=0) set.remove(res[c]);
                        
                        List<Integer> list = new ArrayList<>();
                        list.addAll(set);
                        if(res[a] == 0){
                            res[a] = list.get(0);
                            list.remove(0);
                        }
                        if(res[b] == 0){
                            res[b] = list.get(0);
                            list.remove(0);
                        }
                        if(res[c] == 0){
                            res[c] = list.get(0);
                            list.remove(0);
                        }
                        
                     }
                      
                  }
                  for(int i = 1; i < res.length - 1; i++){
                      System.out.print(res[i] +" ");
                  }
                  
                  
                  }
 
                  }  
